El objetivo de la prueba es crear un sistema de gestión de ficheros que cumpla con lo siguiente:
• El sistema debe de estar compuesto por un interfaz web, un servicio de backend y una base de datos SQL.
• Los usuarios deben de poder enviar ficheros mediante un formulario para su almacenamiento en el servidor.
• Los ficheros almacenados deben de mostrarse en una lista ordenada en el frontal, con atributos como el nombre del fichero, la fecha de subida, el tamaño, el hash sha256 de los mismos y la posibilidad de descargarlos o eliminarlos.
• Debe de tener un sistema de gestión de identidades funcional: Se debe de poder acceder con dos tipos de usuario distintos con dos grados de visibilidad distintos. El usuario que tenga mayor nivel de privilegios debe de poder borrar los archivos almacenados.
• El directorio a utilizar para el guardado de ficheros será "C:\SGDF" en Windows y "/opt/SGDF" en Linux.
La tecnología debe ser la siguiente:
• Python>=3.7 para el servicio de backend.
• Flask como framework web.
• Jinja 2 para las plantillas html.
• Javascript para el control de interacciones en el lado cliente.
• MariaDB o SQLite para la gestión de usuarios y de datos de ficheros.
• Debe ser compatible con Windows 10 y Ubuntu Server 18.04.
Instrucciones adicionales:
• Se comprobará su funcionamiento mediante la descarga y ejecución del archivo "main.py" de este repositorio.
• En caso de necesitar librerías de terceros, se adjuntarán en un fichero "requirements.txt" para poder ser descargadas con pip.
• Si se requieren paquetes adicionales a instalar en el sistema operativo, se indicarán en un fichero "leeme.txt".

Explicación:
Primero, no hice la base de datos ni en MariaDB ni en SQLite pues tengo el Xampp instalado y pensaba que MySQL y MariaDB eran iguales en vez de derivaciones. Fallo mio.
Segundo, tuve varias complicaciones a la hora de implementar la base de datos, autentificación subir archivos al servidor y demás ya que no había visto nada de flask asta el pasado lunes. Con el tiempo y si me dais una oportunidad, vuestra ayuda mejoraré.
Tercero, la base de datos hay que crearla  con el nombre y las tablas se crean por defecto. Los usuarios tienen un campo por defecto para ver si tienen privilegios pero por defecto están en false. Hay que cambiarlo manualmente si quieres cambiarlo. Pero yo no implemente lo de borrar los archivos subidos al servidor por qué no lo sé hacer. Tampoco hice lo de descargar el fichero.
Cuarto, no encontré como modificar la ruta dependiendo del sistema operativo, y tampoco poner el directorio en C: (en mi caso) y los archivos los subo a la carpeta Archivos dentro de la carpeta del fichero.
Quinto, no he sido capaz de conseguir el tamaño y el hash sha256 de los archivos subidos.
Sexto y último, los usuarios se pueden registrar (cada vez que se registra un usuario se crea un registro en la tabla usuarios) y loguear (comprueba si está en la bd y crea la sesión). Una vez logueado, si no lo estas te redirecciona a logim, muestra el nombre de usuario, un formulario para subir ficheros, una tabla con la informacion de los ficheros subidos y un botón para cerrar sesión. Una vez subido un fichero guarda un registro en la bd con la info de este y redirigue. Es obvio que es muy mejorable pero dado el tiempo que le pudé dedicar y que no sabía nada de Flask, estoy contento con el resultado.